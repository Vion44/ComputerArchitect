#include <stdio.h>
#include <gmp.h>
#pragma warning(disable:4996) 
// 정밀도 정수 사칙연산을 위해서는 GNU 에서 제공하는 mpir 라이브러리를 임포트 해야한다.
// 또한 scnaf 반환값이 무시되는 오류가 발생한다. #pragma warning(disable:4996) 코드를 입력해야 하며
// 프로젝트 속성에서 SDL 값을 아니오로 설정해야 한다.

int main() {
    mpz_t num1, num2, result_add, result_sub, result_mul, result_div;
    mpz_init(num1);
    mpz_init(num2);
    mpz_init(result_add);
    mpz_init(result_sub);
    mpz_init(result_mul);
    mpz_init(result_div);

    char input1[100], input2[100]; //최대 100자리 숫자를 char형으로 입력 받을 수 있다.
    // input 값을 조절하면 더 큰 자리 숫자 입력도 가능하다.

    // 첫 번째 임의의 숫자 입력
    printf("첫 번째 숫자를 입력하세요: ");
    scanf("%s", input1);

    // 두 번째 임의의 숫자 입력 
    printf("두 번째 숫자를 입력하세요: ");
    scanf("%s", input2);

    // 입력받은 문자열을 임의 정밀 정수로 설정
    mpz_set_str(num1, input1, 10);
    mpz_set_str(num2, input2, 10);

    // 임의의 숫자 끼리 덧셈
    mpz_add(result_add, num1, num2);

    // 임의의 숫자 끼리 뺄셈 
    mpz_sub(result_sub, num1, num2);

    // 임의의 숫자 끼리 곱셈
    mpz_mul(result_mul, num1, num2);

    // 임의의 숫자 끼리 나눗셈
    mpz_div(result_div, num1, num2);

    // 결과 출력
    gmp_printf("덧셈 결과: %Zd\n", result_add);
    gmp_printf("뺄셈 결과: %Zd\n", result_sub);
    gmp_printf("곱셈 결과: %Zd\n", result_mul);
    gmp_printf("나눗셈 결과: %Zd\n", result_div);

    // 메모리 해제
    mpz_clear(num1);
    mpz_clear(num2);
    mpz_clear(result_add);
    mpz_clear(result_sub);
    mpz_clear(result_mul);
    mpz_clear(result_div);

    return 0;
}
